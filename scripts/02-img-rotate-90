#!/bin/env python3

from os import getenv, path
from wand.image import Image
from sys import stdin, argv, version


if stdin.isatty():
    inList = argv[1:].copy()
else:
    # Running from nautilus
    inList = getenv("NAUTILUS_SCRIPT_SELECTED_FILE_PATHS", "").splitlines()

inList = getenv("NAUTILUS_SCRIPT_SELECTED_FILE_PATHS", "").splitlines()
inList.sort()
files = []
allowed_extensions = [".png", ".jpg", ".jpeg", ".gif", ".heic", ".webp"]
for f in inList:
    try:
        if path.splitext(f)[1].lower() in allowed_extensions:
            files.append(f)
        else:
            continue

    except IndexError:
        continue

if len(files) < 1:
    print(
        f"No files given. this script only allows files of types: {', '.join(allowed_extensions)}"
    )
    exit(0)


def wand_rotate(f):
    with Image(filename=f) as img:
        length = len(img.sequence)
        if length > 1:
            with img.clone() as rotated:
                for i in range(0, length):
                    rotated.sequence[i].rotate(90)
                overWrite = open(f, "wb")
                rotated.save(overWrite)
                overWrite.close()
        else:
            with img.clone() as rotated:
                rotated.rotate(90)
                overWrite = open(f, "wb")
                rotated.save(overWrite)
                overWrite.close()

v = version.rsplit(' ')[0]
v = [int(x) for x in v.split('.')]

if v[0] >= 3 and v[1] >= 12:
    from concurrent.futures import ProcessPoolExecutor
    with ProcessPoolExecutor() as executor:
        executor.map(wand_rotate, files)
## Do the magic
else:
    for f in files:
        wand_rotate(f)

